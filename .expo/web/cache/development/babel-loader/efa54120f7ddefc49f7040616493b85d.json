{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\PrivateEvents\\\\PrivateEvents.js\";\n\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getPrivateFriendEvents, getAllPublicEvents } from \"../../data/MockDataAPI\";\nimport Firebase from \"../../../firebaseConfig\";\nimport firebase from \"firebase\";\n\nvar PrivateEvents = function PrivateEvents(props) {\n  var _firebase$auth$curren, _Firebase$auth$curren;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRefreshing = _useState6[0],\n      setIsRefreshing = _useState6[1];\n\n  useEffect(function () {\n    handleRefresh();\n  }, [(_firebase$auth$curren = firebase.auth().currentUser) == null ? void 0 : _firebase$auth$curren.uid]);\n\n  var handleRefresh = function handleRefresh() {\n    var _firebase$auth$curren2;\n\n    setIsRefreshing(true);\n    Firebase.firestore().collection(\"users\").doc((_firebase$auth$curren2 = firebase.auth().currentUser) == null ? void 0 : _firebase$auth$curren2.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        var friends = snapshot.data().friends;\n        setUser(snapshot.data());\n        console.log(snapshot.data());\n        Promise.all(friends.map(function (friend) {\n          return new Promise(function (resolve, reject) {\n            getPrivateFriendEvents(friend).then(function (friendEvents) {\n              return resolve(friend, friend.friendEvents = friendEvents.map(function (event) {\n                event.userId = friend.id;\n                event.userEmail = friend.email;\n                return event;\n              }));\n            }).catch(function (er) {\n              console.log(er);\n            });\n          });\n        })).then(function (res) {\n          var result = Array.prototype.concat.apply([], res.map(function (item) {\n            return item.friendEvents;\n          }));\n          console.log(result);\n          setEvents(result);\n        });\n      } else {\n        console.log(\"does not exist\");\n      }\n\n      setIsRefreshing(false);\n    });\n  };\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.imageURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, item.name), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, item.category)));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, (_Firebase$auth$curren = Firebase.auth().currentUser) == null ? void 0 : _Firebase$auth$curren.uid), React.createElement(FlatList, {\n    extraData: true,\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: events,\n    renderItem: renderRecipes,\n    refreshing: isRefreshing,\n    onRefresh: handleRefresh,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateEvents;","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/PrivateEvents/PrivateEvents.js"],"names":["React","useLayoutEffect","useEffect","useState","styles","MenuImage","getPrivateFriendEvents","getAllPublicEvents","Firebase","firebase","PrivateEvents","props","user","setUser","events","setEvents","isRefreshing","setIsRefreshing","handleRefresh","auth","currentUser","uid","firestore","collection","doc","get","then","snapshot","exists","friends","data","console","log","Promise","all","map","friend","resolve","reject","friendEvents","event","userId","id","userEmail","email","catch","er","res","result","Array","prototype","concat","apply","item","onPressRecipe","navigation","navigate","renderRecipes","container","photo","uri","imageURL","title","name","category"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect,useEffect,useState } from \"react\";\r\nimport { FlatList, Text, View, TouchableHighlight, Image, RefreshControl } from \"react-native\";\r\nimport styles from \"./styles\";\r\n//import { events,categories,ingredients } from \"../../data/dataArrays\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport {  getPrivateFriendEvents,getAllPublicEvents } from \"../../data/MockDataAPI\";\r\nimport Firebase from '../../../firebaseConfig';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst PrivateEvents = (props) =>{\r\n  const [user, setUser] = useState()\r\n  const [events,setEvents] = useState([])\r\n  const [isRefreshing, setIsRefreshing] = useState(false)\r\n\r\n  useEffect(() => {\r\n    handleRefresh()\r\n  }, [firebase.auth().currentUser?.uid])\r\n\r\n  const handleRefresh = () => {\r\n    setIsRefreshing(true)\r\n    Firebase.firestore()\r\n    .collection(\"users\")\r\n    .doc(firebase.auth().currentUser?.uid)\r\n    .get()\r\n    .then((snapshot) => {\r\n      if(snapshot.exists){\r\n        let friends = snapshot.data().friends;\r\n        setUser(snapshot.data())\r\n        console.log(snapshot.data())\r\n\r\n        Promise.all(\r\n          friends.map(friend=>{\r\n            return new Promise((resolve, reject) => {\r\n              getPrivateFriendEvents(friend)\r\n                .then(friendEvents=>resolve(\r\n                  friend,\r\n                  friend.friendEvents= friendEvents.map(event=>{\r\n                    event.userId=friend.id\r\n                    event.userEmail=friend.email\r\n                    return event\r\n                    }\r\n                  )\r\n                ))\r\n                .catch(er=>{console.log(er)})\r\n            })   \r\n\r\n          })).then(res=>{\r\n            const result = Array.prototype.concat.apply([],res.map(item=>item.friendEvents))\r\n            console.log(result)\r\n            setEvents(result)\r\n          })\r\n          \r\n      }\r\n      else{\r\n        console.log(\"does not exist\")\r\n      }\r\n      setIsRefreshing(false)\r\n    })\r\n  }\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.imageURL }} />\r\n        <Text style={styles.title}>{item.name}</Text>\r\n        <Text style={styles.category}>{item.category}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n  return(\r\n    <View>\r\n    <Text>{Firebase.auth().currentUser?.uid}</Text>\r\n    <FlatList \r\n    extraData={true}\r\n    vertical \r\n    showsVerticalScrollIndicator={false} \r\n    numColumns={2} \r\n    data={events} \r\n    renderItem={renderRecipes} \r\n    refreshing={ isRefreshing}\r\n    onRefresh={handleRefresh}\r\n    keyExtractor={(item) => `${item.id}`} />\r\n  </View>\r\n  )\r\n}\r\nexport default PrivateEvents"]},"metadata":{},"sourceType":"module"}