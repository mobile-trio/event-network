{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\EventAdd\\\\EventAdd.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Firebase from \"../../../firebaseConfig\";\nimport * as ImagePicker from 'expo-image-picker';\nimport styles from \"./styles\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\nimport { useValidation } from 'react-native-form-validator';\nimport { sendNotificationToAllUsers } from \"../../components/Notification/Notification\";\nimport DatePicker from 'react-native-datepicker';\n\nvar EventAdd = function EventAdd() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasGalleryPermission = _useState2[0],\n      setHasGalleryPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      category = _useState12[0],\n      setCategory = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      date = _useState14[0],\n      setDate = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isLoading = _useState16[0],\n      setIsLoading = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isImageFromGallery = _useState18[0],\n      setIsImageFromGallery = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isPrivate = _useState20[0],\n      setIsPrivate = _useState20[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsPrivate(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var toggleSwitchGallery = function toggleSwitchGallery() {\n    setImage();\n    setIsImageFromGallery(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var _useValidation = useValidation({\n    state: {\n      name: name,\n      description: description,\n      location: location,\n      category: category\n    }\n  }),\n      validate = _useValidation.validate,\n      isFieldInError = _useValidation.isFieldInError,\n      getErrorsInField = _useValidation.getErrorsInField,\n      getErrorMessages = _useValidation.getErrorMessages;\n\n  var _onPressButton = function _onPressButton() {\n    if (validate({\n      name: {\n        string: true,\n        minlength: 3,\n        maxlength: 20,\n        required: true\n      },\n      description: {\n        string: true,\n        maxlength: 60,\n        required: true\n      },\n      location: {\n        string: true,\n        required: true\n      },\n      category: {\n        string: true,\n        required: true\n      }\n    })) {\n      addEvent();\n    }\n  };\n\n  var successAlert = function successAlert() {\n    return Alert.alert('Event Created!', 'Event created succesfully', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  var errorAlert = function errorAlert() {\n    return Alert.alert('Error', 'Someting went wrong', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n              console.log(status);\n              setHasGalleryPermission(status === 'granted');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addEvent = function addEvent() {\n    isImageFromGallery ? crateToDo() : isPrivate ? saveTodo(image) : saveTodoPublic(image);\n  };\n\n  var saveTodo = function saveTodo(imageURL) {\n    setIsLoading(true);\n    Firebase.firestore().collection('privateEvents').doc(Firebase.auth().currentUser.uid).collection('userEvents').add({\n      name: name,\n      description: description,\n      location: location,\n      imageURL: imageURL,\n      category: category\n    }).then(function () {\n      console.log(\"success\");\n      successAlert();\n      sendNotificationToAllUsers(\"New Event Created!\", name);\n    }).catch(function () {\n      errorAlert();\n    }).finally(function () {\n      setIsLoading(false);\n    });\n  };\n\n  var saveTodoPublic = function saveTodoPublic(imageURL) {\n    setIsLoading(true);\n    Firebase.firestore().collection('publicEvents').add({\n      name: name,\n      description: description,\n      location: location,\n      imageURL: imageURL,\n      category: category\n    }).then(function () {\n      console.log(\"success\");\n      successAlert();\n      sendNotificationToAllUsers(\"New Event Created!\", name);\n    }).catch(function () {\n      errorAlert();\n    }).finally(function () {\n      setIsLoading(false);\n    });\n  };\n\n  var crateToDo = function crateToDo() {\n    var childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function crateToDo$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsLoading(true);\n\n            if (!image) {\n              _context3.next = 16;\n              break;\n            }\n\n            childPath = \"events/\" + Firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(fetch(image));\n\n          case 5:\n            response = _context3.sent;\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context3.sent;\n            task = Firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                isPrivate ? saveTodo(snapshot) : saveTodoPublic(snapshot);\n                console.log(snapshot);\n                setIsLoading(false);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n              setIsLoading(false);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n            _context3.next = 16;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (hasGalleryPermission === false) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 12\n      }\n    }, \"No access to galery\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, React.createElement(LoadingIndicator, {\n    isLoading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'position' : null,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 50 : 70,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 0,\n      marginTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, isImageFromGallery ? \"From Galery\" : \"From Link\"), React.createElement(Switch, {\n    style: {\n      flex: 0\n    },\n    trackColor: {\n      false: '#767577',\n      true: '#009688'\n    },\n    thumbColor: isImageFromGallery ? '#f4f3f4' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitchGallery,\n    value: isImageFromGallery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  })), isImageFromGallery ? React.createElement(AppButton, {\n    title: \"Pick Image From Gallery\",\n    style: styles.button,\n    onPress: function onPress() {\n      return pickImage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }) : React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"imageURL\",\n    onChangeText: function onChangeText(imageURL) {\n      return setImage(imageURL);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      minHeight: 150,\n      borderRadius: 8,\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), isFieldInError('name') && getErrorsInField('name').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"description\",\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), isFieldInError('description') && getErrorsInField('description').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"location\",\n    onChangeText: function onChangeText(location) {\n      return setLocation(location);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), isFieldInError('location') && getErrorsInField('location').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: styles.formItems,\n    placeholder: \"category\",\n    onChangeText: function onChangeText(category) {\n      return setCategory(category);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }), isFieldInError('category') && getErrorsInField('category').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(DatePicker, {\n    showIcon: false,\n    androidMode: \"spinner\",\n    style: {\n      width: 300\n    },\n    date: date,\n    mode: \"date\",\n    placeholder: \"DD/MM/YYYY\",\n    format: \"DD-MM-YYYY\",\n    confirmBtnText: \"Confirm\",\n    cancelBtnText: \"Cancel\",\n    customStyles: {\n      dateInput: {\n        backgroundColor: 'white',\n        borderWidth: 1,\n        borderColor: 'black'\n      }\n    },\n    onDateChange: function onDateChange(date) {\n      return setDate(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 0,\n      marginTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, isPrivate ? \"Private\" : \"Public\"), React.createElement(Switch, {\n    style: {\n      flex: 0\n    },\n    trackColor: {\n      false: '#767577',\n      true: '#009688'\n    },\n    thumbColor: isPrivate ? '#f4f3f4' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isPrivate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  })), React.createElement(AppButton, {\n    style: styles.button,\n    onPress: function onPress() {\n      return _onPressButton();\n    },\n    title: \"Add Event\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default EventAdd;","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/EventAdd/EventAdd.js"],"names":["React","useState","useEffect","Firebase","ImagePicker","styles","AppButton","LoadingIndicator","useValidation","sendNotificationToAllUsers","DatePicker","EventAdd","hasGalleryPermission","setHasGalleryPermission","image","setImage","name","setName","description","setDescription","location","setLocation","category","setCategory","date","setDate","isLoading","setIsLoading","isImageFromGallery","setIsImageFromGallery","isPrivate","setIsPrivate","toggleSwitch","previousState","toggleSwitchGallery","state","validate","isFieldInError","getErrorsInField","getErrorMessages","_onPressButton","string","minlength","maxlength","required","addEvent","successAlert","Alert","alert","text","onPress","console","log","errorAlert","Platform","OS","requestMediaLibraryPermissionsAsync","status","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","crateToDo","saveTodo","saveTodoPublic","imageURL","firestore","collection","doc","auth","currentUser","uid","add","then","catch","finally","childPath","Math","random","toString","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","taskError","on","container","flex","formBox","flexDirection","marginBottom","marginTop","false","true","button","formItems","minHeight","borderRadius","map","errorMessage","errorText","width","dateInput","backgroundColor","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Button, TextInput, Text, Image, Switch, KeyboardAvoidingView, ScrollView, TouchableOpacity,Alert } from 'react-native'\r\nimport Firebase from '../../../firebaseConfig';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport styles from \"./styles\";\r\nimport AppButton from '../../components/AppButton/AppButton';\r\nimport LoadingIndicator from '../../components/LoadingIndicator/LoadingIndicator';\r\nimport { useValidation } from 'react-native-form-validator';\r\nimport {sendNotificationToAllUsers} from '../../components/Notification/Notification';\r\nimport DatePicker from 'react-native-datepicker';\r\n\r\n\r\n\r\nconst EventAdd = () => {\r\n\r\n  const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [name, setName] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [location, setLocation] = useState(\"\")\r\n  const [category, setCategory] = useState(\"\")\r\n  const [date, setDate] = useState(\"\")\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const [isImageFromGallery, setIsImageFromGallery] = useState(false)\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const toggleSwitch = () => setIsPrivate(previousState => !previousState);\r\n  const toggleSwitchGallery = () => {\r\n    setImage()\r\n    setIsImageFromGallery(previousState => !previousState)\r\n  };\r\n\r\n  const { validate, isFieldInError, getErrorsInField, getErrorMessages } =\r\n  useValidation({\r\n    state: { name, description, location, category },\r\n  });\r\n\r\n  const _onPressButton = () => {\r\n    if(validate({\r\n      name: { string: true,minlength: 3, maxlength: 20, required: true },\r\n      description: { string: true, maxlength: 60, required: true },\r\n      location: { string: true, required: true },\r\n      category: { string: true, required: true  },\r\n    })){\r\n      addEvent()\r\n    }\r\n  };\r\n\r\n  const successAlert = () =>\r\n  Alert.alert('Event Created!', 'Event created succesfully', [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n  const errorAlert = () =>\r\n  Alert.alert('Error', 'Someting went wrong', [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        console.log(status)\r\n        setHasGalleryPermission(status === 'granted')\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n\r\n  const addEvent = () => {\r\n    isImageFromGallery?\r\n      crateToDo():isPrivate?\r\n        saveTodo(image):saveTodoPublic(image)\r\n  }\r\n  const saveTodo = (imageURL) => {\r\n    setIsLoading(true)\r\n    Firebase.firestore()\r\n      .collection('privateEvents')\r\n      .doc(Firebase.auth().currentUser.uid)\r\n      .collection('userEvents')\r\n      .add({\r\n        name,\r\n        description,\r\n        location,\r\n        imageURL,\r\n        category\r\n      }).then((function () {\r\n        console.log(\"success\")\r\n        successAlert()\r\n        sendNotificationToAllUsers(\"New Event Created!\",name)\r\n      })).catch(()=>{\r\n        errorAlert()\r\n      }).finally(()=>{\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n  const saveTodoPublic = (imageURL) => {\r\n    setIsLoading(true)\r\n    Firebase.firestore()\r\n      .collection('publicEvents')\r\n      .add({\r\n        name,\r\n        description,\r\n        location,\r\n        imageURL,\r\n        category\r\n      }).then((function () {\r\n        console.log(\"success\")\r\n        successAlert()\r\n        sendNotificationToAllUsers(\"New Event Created!\",name)\r\n      })).catch(()=>{\r\n        errorAlert()\r\n      }).finally(()=>{\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  const crateToDo = async () => {\r\n    setIsLoading(true)\r\n    if (image) {\r\n      const childPath = `events/${Firebase.auth().currentUser.uid}/${Math.random().toString(36)}`\r\n\r\n      const response = await fetch(image)\r\n      const blob = await response.blob();\r\n\r\n      const task = Firebase\r\n        .storage()\r\n        .ref()\r\n        .child(childPath)\r\n        .put(blob)\r\n\r\n      const taskProgress = snapshot => {\r\n        console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n      }\r\n\r\n      const taskCompleted = () => {\r\n        task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n          isPrivate? saveTodo(snapshot): saveTodoPublic(snapshot)\r\n          console.log(snapshot)\r\n          setIsLoading(false)\r\n        })\r\n      }\r\n\r\n      const taskError = snapshot => {\r\n        console.log(snapshot)\r\n        setIsLoading(false)\r\n      }\r\n\r\n      task.on(\"state_changed\", taskProgress, taskError, taskCompleted)\r\n    } else {\r\n      \r\n    }\r\n\r\n\r\n  }\r\n\r\n  if (hasGalleryPermission === false) {\r\n    return <Text>No access to galery</Text>\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <View style={styles.container}>\r\n      <LoadingIndicator isLoading={isLoading}/>\r\n      <KeyboardAvoidingView\r\n             style={{flex:1}}\r\n             behavior={Platform.OS === 'ios' ? 'position' : null}\r\n             keyboardVerticalOffset={Platform.OS === 'ios' ? 50 : 70}>\r\n        <ScrollView>\r\n          <View style={styles.formBox}>\r\n\r\n          <View style={{ flexDirection: \"row\", marginBottom: 12 }}>\r\n              <Text style={{ flex: 0, marginTop: 12 }}>\r\n                {isImageFromGallery ? \"From Galery\" : \"From Link\"}\r\n              </Text>\r\n              <Switch\r\n                style={{ flex: 0 }}\r\n                trackColor={{ false: '#767577', true: '#009688' }}\r\n                thumbColor={isImageFromGallery ? '#f4f3f4' : '#f4f3f4'}\r\n                ios_backgroundColor=\"#3e3e3e\"\r\n                onValueChange={toggleSwitchGallery}\r\n                value={isImageFromGallery}\r\n              />\r\n            </View>\r\n\r\n            {isImageFromGallery?\r\n              <AppButton title=\"Pick Image From Gallery\" style={styles.button} onPress={() => pickImage()} ></AppButton>\r\n              :\r\n              <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"imageURL\"\r\n              onChangeText={imageURL => setImage(imageURL)}\r\n            />\r\n          }\r\n            {image&&<Image source={{ uri: image }} style={{ minHeight: 150, borderRadius: 8, marginTop: 8 }} />}\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"name\"\r\n              onChangeText={name => setName(name)}\r\n            />\r\n            {isFieldInError('name') &&\r\n              getErrorsInField('name').map(errorMessage => (\r\n                <Text key={errorMessage} style={styles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"description\"\r\n              onChangeText={description => setDescription(description)}\r\n            />\r\n            {isFieldInError('description') &&\r\n              getErrorsInField('description').map(errorMessage => (\r\n                <Text  key={errorMessage} style={styles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"location\"\r\n              onChangeText={location => setLocation(location)}\r\n            />\r\n              {isFieldInError('location') &&\r\n              getErrorsInField('location').map(errorMessage => (\r\n                <Text key={errorMessage} style={styles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={styles.formItems}\r\n              placeholder=\"category\"\r\n              onChangeText={category => setCategory(category)}\r\n            />\r\n              {isFieldInError('category') &&\r\n              getErrorsInField('category').map(errorMessage => (\r\n                <Text key={errorMessage}style={styles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n                      <DatePicker\r\n          showIcon={false}\r\n          androidMode=\"spinner\"\r\n          style={{ width: 300 }}\r\n          date={date}\r\n          mode=\"date\"\r\n          placeholder=\"DD/MM/YYYY\"\r\n          format=\"DD-MM-YYYY\"\r\n          confirmBtnText=\"Confirm\"\r\n          cancelBtnText=\"Cancel\"\r\n          customStyles={{\r\n            dateInput: {\r\n              backgroundColor: 'white',\r\n              borderWidth: 1,\r\n              borderColor: 'black',\r\n            },\r\n          }}\r\n          onDateChange={(date) => setDate(date)}\r\n        />\r\n            <View style={{ flexDirection: \"row\", marginBottom: 24 }}>\r\n              <Text style={{ flex: 0, marginTop: 12 }}>\r\n                {isPrivate ? \"Private\" : \"Public\"}\r\n              </Text>\r\n              <Switch\r\n                style={{ flex: 0 }}\r\n                trackColor={{ false: '#767577', true: '#009688' }}\r\n                thumbColor={isPrivate ? '#f4f3f4' : '#f4f3f4'}\r\n                ios_backgroundColor=\"#3e3e3e\"\r\n                onValueChange={toggleSwitch}\r\n                value={isPrivate}\r\n              />\r\n            </View>\r\n            <AppButton\r\n              style={styles.button}\r\n              onPress={() => _onPressButton()}\r\n              title=\"Add Event\" />\r\n          </View>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n\r\n  )\r\n}\r\n\r\nexport default EventAdd\r\n"]},"metadata":{},"sourceType":"module"}