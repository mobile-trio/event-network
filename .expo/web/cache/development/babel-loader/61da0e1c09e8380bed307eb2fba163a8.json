{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\PublicEvents\\\\PublicEvents.js\";\n\nimport React, { useLayoutEffect, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryNameFirebase, addAllRecipes, addCategories, addIngredients, getAllRecipes, getAllPublicEvents } from \"../../data/MockDataAPI\";\nimport Firebase from \"../../../firebaseConfig\";\n\nvar PublicEvents = function PublicEvents(props) {\n  var _Firebase$auth$curren;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      events = _useState2[0],\n      setEvents = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  useEffect(function () {\n    setIsRefreshing(true);\n    getAllPublicEvents().then(function (res) {\n      setEvents(res);\n      setIsRefreshing(false);\n    });\n  }, []);\n\n  var handleRefresh = function handleRefresh() {\n    setIsRefreshing(true);\n    getAllPublicEvents().then(function (res) {\n      setEvents(res);\n      setIsRefreshing(false);\n    });\n  };\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.imageURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, item.name), React.createElement(Text, {\n      style: styles.category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, item.category)));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, (_Firebase$auth$curren = Firebase.auth().currentUser) == null ? void 0 : _Firebase$auth$curren.uid), React.createElement(FlatList, {\n    extraData: true,\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: events,\n    renderItem: renderRecipes,\n    refreshing: isRefreshing,\n    onRefresh: handleRefresh,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PublicEvents;","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/PublicEvents/PublicEvents.js"],"names":["React","useLayoutEffect","useEffect","useState","styles","MenuImage","getCategoryNameFirebase","addAllRecipes","addCategories","addIngredients","getAllRecipes","getAllPublicEvents","Firebase","PublicEvents","props","events","setEvents","isRefreshing","setIsRefreshing","then","res","handleRefresh","onPressRecipe","item","navigation","navigate","renderRecipes","container","photo","uri","imageURL","title","name","category","auth","currentUser","uid","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAgCC,SAAhC,EAA0CC,QAA1C,QAA0D,OAA1D;;;;;;;AAEA,OAAOC,MAAP;AAEA,OAAOC,SAAP;AACA,SAASC,uBAAT,EAAiCC,aAAjC,EAA+CC,aAA/C,EAA6DC,cAA7D,EAA4EC,aAA5E,EAA0FC,kBAA1F;AACA,OAAOC,QAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAU;AAAA;;AAAA,kBACFX,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACtBY,MADsB;AAAA,MACfC,SADe;;AAAA,mBAEWb,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAEtBc,YAFsB;AAAA,MAERC,eAFQ;;AAK7BhB,EAAAA,SAAS,CAAC,YAAM;AAEdgB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAP,IAAAA,kBAAkB,GAAGQ,IAArB,CAA0B,UAAAC,GAAG,EAAE;AAC7BJ,MAAAA,SAAS,CAACI,GAAD,CAAT;AACAF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAHD;AAKD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAP,IAAAA,kBAAkB,GAAGQ,IAArB,CAA0B,UAAAC,GAAG,EAAE;AAC7BJ,MAAAA,SAAS,CAACI,GAAD,CAAT;AACAF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAHD;AAID,GAND;;AAQA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9BC,IAAAA,UAAU,CAACC,QAAX,CAAoB,QAApB,EAA8B;AAAEF,MAAAA,IAAI,EAAJA;AAAF,KAA9B;AACD,GAFD;;AAIA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGH,IAAH,QAAGA,IAAH;AAAA,WACpB,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,qBAAlC;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMD,aAAa,CAACC,IAAD,CAAnB;AAAA,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAACuB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEvB,MAAM,CAACwB,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEN,IAAI,CAACO;AAAZ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,MAAM,CAAC2B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BR,IAAI,CAACS,IAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE5B,MAAM,CAAC6B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BV,IAAI,CAACU,QAApC,CAHF,CADF,CADoB;AAAA,GAAtB;;AASA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAOrB,QAAQ,CAACsB,IAAT,GAAgBC,WAAvB,qBAAO,sBAA6BC,GAApC,CADA,EAEA,oBAAC,QAAD;AACA,IAAA,SAAS,EAAE,IADX;AAEA,IAAA,QAAQ,MAFR;AAGA,IAAA,4BAA4B,EAAE,KAH9B;AAIA,IAAA,UAAU,EAAE,CAJZ;AAKA,IAAA,IAAI,EAAErB,MALN;AAMA,IAAA,UAAU,EAAEW,aANZ;AAOA,IAAA,UAAU,EAAGT,YAPb;AAQA,IAAA,SAAS,EAAEI,aARX;AASA,IAAA,YAAY,EAAE,sBAACE,IAAD;AAAA,kBAAaA,IAAI,CAACc,EAAlB;AAAA,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF;AAgBD,CApDD;;AAqDA,eAAexB,YAAf","sourcesContent":["import React, { useLayoutEffect,useEffect,useState } from \"react\";\r\nimport { FlatList, Text, View, TouchableHighlight, Image, RefreshControl } from \"react-native\";\r\nimport styles from \"./styles\";\r\n//import { events,categories,ingredients } from \"../../data/dataArrays\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport { getCategoryNameFirebase,addAllRecipes,addCategories,addIngredients,getAllRecipes,getAllPublicEvents } from \"../../data/MockDataAPI\";\r\nimport Firebase from '../../../firebaseConfig';\r\n\r\nconst PublicEvents = (props) =>{\r\n  const [events,setEvents] = useState([])\r\n  const [isRefreshing, setIsRefreshing] = useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    //addIngredients(ingredients)\r\n    setIsRefreshing(true)\r\n    getAllPublicEvents().then(res=>{\r\n      setEvents(res)\r\n      setIsRefreshing(false)\r\n    })\r\n    \r\n  }, [])\r\n\r\n  const handleRefresh = () => {\r\n    setIsRefreshing(true)\r\n    getAllPublicEvents().then(res=>{\r\n      setEvents(res)\r\n      setIsRefreshing(false)\r\n    })\r\n  }\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressRecipe(item)}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.imageURL }} />\r\n        <Text style={styles.title}>{item.name}</Text>\r\n        <Text style={styles.category}>{item.category}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n  return(\r\n    <View>\r\n    <Text>{Firebase.auth().currentUser?.uid}</Text>\r\n    <FlatList \r\n    extraData={true}\r\n    vertical \r\n    showsVerticalScrollIndicator={false} \r\n    numColumns={2} \r\n    data={events} \r\n    renderItem={renderRecipes} \r\n    refreshing={ isRefreshing}\r\n    onRefresh={handleRefresh}\r\n    keyExtractor={(item) => `${item.id}`} />\r\n  </View>\r\n  )\r\n\r\n}\r\nexport default PublicEvents"]},"metadata":{},"sourceType":"module"}