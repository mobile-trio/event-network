{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Firebase from \"../../../firebaseConfig\";\nimport commonFormStyles from \"../../styles/commonFormStyles\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport styles from \"./styles\";\nimport firebase from 'firebase';\nexport default function Login(props) {\n  var _this = this;\n\n  useEffect(function () {\n    fetchUser();\n  }, []);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRefreshing = _useState4[0],\n      setIsRefreshing = _useState4[1];\n\n  function fetchUser() {\n    setIsRefreshing(true);\n    Firebase.firestore().collection(\"users\").doc(Firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        setUser(snapshot.data());\n        console.log(snapshot.data());\n      } else {\n        console.log(\"does not exist\");\n      }\n\n      setIsRefreshing(false);\n    });\n  }\n\n  function acceptFriendRequest(item) {\n    setIsRefreshing(true);\n    firebase.firestore().collection('users').doc(Firebase.auth().currentUser.uid).set({\n      friends: [item]\n    }, {\n      merge: true\n    }).then(setIsRefreshing(false));\n    Firebase.firestore().collection(\"users\").doc(Firebase.auth().currentUser.uid).update({\n      \"friendRequests\": firebase.firestore.FieldValue.arrayRemove(item)\n    }).then(function (snapshot) {\n      if (snapshot.exists) {\n        setUser(snapshot.data());\n        console.log(snapshot.data());\n      } else {\n        console.log(\"does not exist\");\n      }\n\n      setIsRefreshing(false);\n    });\n  }\n\n  var renderFriends = function renderFriends(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, item.email));\n  };\n\n  var renderFriendRequests = function renderFriendRequests(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, item.email), React.createElement(AppButton, {\n      title: \"Accept Request\",\n      onClick: function onClick() {\n        return acceptFriendRequest(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, user == null ? void 0 : user.email), React.createElement(FlatList, {\n    extraData: true,\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: user == null ? void 0 : user.friendRequests,\n    renderItem: renderFriendRequests,\n    refreshing: isRefreshing,\n    onRefresh: fetchUser,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }\n  }, \"Friends\"), React.createElement(FlatList, {\n    extraData: true,\n    vertical: true,\n    showsVerticalScrollIndicator: false,\n    numColumns: 2,\n    data: user == null ? void 0 : user.friends,\n    renderItem: renderFriends,\n    refreshing: isRefreshing,\n    onRefresh: fetchUser,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","Firebase","commonFormStyles","AppButton","styles","firebase","Login","props","fetchUser","user","setUser","isRefreshing","setIsRefreshing","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","acceptFriendRequest","item","set","friends","merge","update","FieldValue","arrayRemove","renderFriends","container","title","email","renderFriendRequests","friendRequests","id"],"mappings":"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","sourcesContent":["\r\nimport React, {useState,useEffect } from 'react'\r\nimport { View, Button, TextInput, Text, Image, Switch, TouchableHighlight, ScrollView, TouchableOpacity,Alert,FlatList } from 'react-native'\r\nimport Firebase from '../../../firebaseConfig';\r\nimport commonFormStyles from '../../styles/commonFormStyles';\r\nimport AppButton from '../../components/AppButton/AppButton';\r\nimport styles from \"./styles\";\r\nimport firebase from 'firebase';\r\n\r\nexport default function Login(props) {\r\n\r\n  useEffect(() => {\r\n    fetchUser()\r\n  }, [])\r\n\r\n  const [user, setUser] = useState()\r\n  const [isRefreshing, setIsRefreshing] = useState(false)\r\n  \r\n\r\n  function fetchUser(){\r\n\r\n    setIsRefreshing(true)\r\n      Firebase.firestore()\r\n      .collection(\"users\")\r\n      .doc(Firebase.auth().currentUser.uid)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if(snapshot.exists){\r\n          setUser(snapshot.data())\r\n          console.log(snapshot.data())\r\n        }\r\n        else{\r\n          console.log(\"does not exist\")\r\n        }\r\n        setIsRefreshing(false)\r\n      })\r\n\r\n  }\r\n\r\n  function acceptFriendRequest(item){\r\n\r\n    setIsRefreshing(true)\r\n    firebase.firestore()\r\n    .collection('users')\r\n    .doc(Firebase.auth().currentUser.uid)\r\n    .set(\r\n      { friends: [item] },\r\n      { merge: true }\r\n    ).then(\r\n      setIsRefreshing(false)\r\n    )\r\n\r\n      Firebase.firestore()\r\n      .collection(\"users\")\r\n      .doc(Firebase.auth().currentUser.uid)\r\n      .update({\r\n        \"friendRequests\": firebase.firestore.FieldValue.arrayRemove(item)\r\n      })\r\n      .then((snapshot) => {\r\n        if(snapshot.exists){\r\n          setUser(snapshot.data())\r\n          console.log(snapshot.data())\r\n        }\r\n        else{\r\n          console.log(\"does not exist\")\r\n        }\r\n        setIsRefreshing(false)\r\n      })\r\n\r\n  }\r\n\r\n  const renderFriends = ({ item }) => (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{item.email}</Text>\r\n    </View>\r\n);\r\n\r\n  const renderFriendRequests = ({ item }) => (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>{item.email}</Text>\r\n        <AppButton title=\"Accept Request\" onClick={() => acceptFriendRequest(item)}/>\r\n      </View>\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <Text>{user?.email}</Text>\r\n\r\n      <FlatList \r\n    extraData={true}\r\n    vertical \r\n    showsVerticalScrollIndicator={false} \r\n    numColumns={2} \r\n    data={user?.friendRequests} \r\n    renderItem={renderFriendRequests} \r\n    refreshing={ isRefreshing}\r\n    onRefresh={fetchUser}\r\n    keyExtractor={(item) => `${item.id}`} />\r\n  \r\n\r\n  <Text>Friends</Text>\r\n        <FlatList \r\n    extraData={true}\r\n    vertical \r\n    showsVerticalScrollIndicator={false} \r\n    numColumns={2} \r\n    data={user?.friends} \r\n    renderItem={renderFriends} \r\n    refreshing={ isRefreshing}\r\n    onRefresh={fetchUser}\r\n    keyExtractor={(item) => `${item.id}`} />\r\n  </View>\r\n\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}