{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\Login\\\\Login.js\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\nimport { useValidation } from 'react-native-form-validator';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Firebase from \"../../../firebaseConfig\";\nimport { registerForPushNotificationsAsync } from \"../../components/Notification/Notification\";\nimport commonFormStyles from \"../../styles/commonFormStyles\";\nexport default function Login(props) {\n  var _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var successAlert = function successAlert() {\n    return Alert.alert('Logined In!', 'Logined In Succesfully', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  var errorAlert = function errorAlert(error) {\n    return Alert.alert('Error', error, [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  var _useValidation = useValidation({\n    state: {\n      email: email,\n      password: password\n    }\n  }),\n      validate = _useValidation.validate,\n      isFieldInError = _useValidation.isFieldInError,\n      getErrorsInField = _useValidation.getErrorsInField,\n      getErrorMessages = _useValidation.getErrorMessages;\n\n  var _onPressButton = function _onPressButton() {\n    if (validate({\n      email: {\n        email: true,\n        required: true\n      },\n      password: {\n        string: true,\n        required: true\n      }\n    })) {\n      Login();\n    }\n  };\n\n  var Login = function Login() {\n    setIsLoading(true);\n    Firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n      registerForPushNotificationsAsync().then(function (res) {});\n      setIsLoading(false);\n      console.log(result);\n      successAlert();\n      navigation.navigate(\"Home\");\n    }).catch(function (error) {\n      setIsLoading(false);\n      console.log(error);\n      errorAlert(error.toString());\n    });\n  };\n\n  return React.createElement(View, {\n    style: commonFormStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(LoadingIndicator, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'position' : null,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 50 : 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: commonFormStyles.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: commonFormStyles.formItems,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), isFieldInError('email') && getErrorsInField('email').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: commonFormStyles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: commonFormStyles.formItems,\n    placeholder: \"password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), isFieldInError('password') && getErrorsInField('password').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: commonFormStyles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(AppButton, {\n    style: commonFormStyles.button,\n    onPress: function onPress() {\n      return _onPressButton();\n    },\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/Login/Login.js"],"names":["AppButton","LoadingIndicator","useValidation","React","useState","Firebase","registerForPushNotificationsAsync","commonFormStyles","Login","props","navigation","route","email","setEmail","password","setPassword","isLoading","setIsLoading","successAlert","Alert","alert","text","onPress","console","log","errorAlert","error","state","validate","isFieldInError","getErrorsInField","getErrorMessages","_onPressButton","required","string","auth","signInWithEmailAndPassword","then","result","res","navigate","catch","toString","container","flex","Platform","OS","formBox","formItems","map","errorMessage","errorText","button"],"mappings":"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","sourcesContent":["import AppButton from '../../components/AppButton/AppButton';\r\nimport LoadingIndicator from '../../components/LoadingIndicator/LoadingIndicator';\r\nimport { useValidation } from 'react-native-form-validator';\r\nimport React, {useState } from 'react'\r\nimport { View, Button, TextInput, Text, Image, Switch, KeyboardAvoidingView, ScrollView, TouchableOpacity,Alert } from 'react-native'\r\nimport Firebase from '../../../firebaseConfig';\r\nimport {registerForPushNotificationsAsync} from \"../../components/Notification/Notification\"\r\nimport commonFormStyles from '../../styles/commonFormStyles';\r\n\r\nexport default function Login(props) {\r\n\r\n  const { navigation, route } = props;\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  \r\n  const successAlert = () =>\r\n  Alert.alert('Logined In!', 'Logined In Succesfully', [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n  const errorAlert = (error) =>\r\n  Alert.alert('Error', error, [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n\r\n\r\n  const { validate, isFieldInError, getErrorsInField, getErrorMessages } =\r\n  useValidation({\r\n    state: { email,password },\r\n  });\r\n\r\n  const _onPressButton = () => {\r\n    if(validate({\r\n      email: { email: true, required: true },\r\n      password: { string: true,  required: true },\r\n    })){\r\n      Login()\r\n    }\r\n  };\r\n\r\n  const Login = () => {\r\n    setIsLoading(true)\r\n    Firebase.auth().signInWithEmailAndPassword(email,password)\r\n    .then((result)=>{\r\n      registerForPushNotificationsAsync().then(\r\n        res=>{}\r\n      )\r\n      setIsLoading(false)\r\n      console.log(result)\r\n      successAlert()\r\n      navigation.navigate(\"Home\");\r\n    })\r\n    .catch((error)=>{\r\n      setIsLoading(false)\r\n      console.log(error)\r\n      errorAlert(error.toString())\r\n    })\r\n  }\r\n  return (\r\n    <View style={commonFormStyles.container}>\r\n      <LoadingIndicator isLoading={isLoading}/>\r\n      <KeyboardAvoidingView\r\n             style={{flex:1}}\r\n             behavior={Platform.OS === 'ios' ? 'position' : null}\r\n             keyboardVerticalOffset={Platform.OS === 'ios' ? 50 : 70}>\r\n        <ScrollView>\r\n          <View style={commonFormStyles.formBox}>\r\n            <TextInput\r\n              style={commonFormStyles.formItems}\r\n              placeholder=\"email\"\r\n              onChangeText={email => setEmail(email)}\r\n            />\r\n            {isFieldInError('email') &&\r\n              getErrorsInField('email').map(errorMessage => (\r\n                <Text key={errorMessage} style={commonFormStyles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={commonFormStyles.formItems}\r\n              placeholder=\"password\"\r\n              onChangeText={password => setPassword(password)}\r\n            />\r\n            {isFieldInError('password') &&\r\n              getErrorsInField('password').map(errorMessage => (\r\n                <Text  key={errorMessage} style={commonFormStyles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <AppButton\r\n              style={commonFormStyles.button}\r\n              onPress={() => _onPressButton()}\r\n              title=\"Register\" />\r\n          </View>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}