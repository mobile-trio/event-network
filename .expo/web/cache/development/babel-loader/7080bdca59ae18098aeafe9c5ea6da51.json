{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport Firebase from \"../../firebaseConfig\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryNameFirebase(categoryId) {\n  var name;\n  return _regeneratorRuntime.async(function getCategoryNameFirebase$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          name = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"categories\").where(\"id\", \"==\", categoryId).get().then(function (snapshot) {\n            name = snapshot.docs.map(function (doc) {\n              return doc.data().name;\n            });\n          }));\n\n        case 3:\n          console.log(name[0]);\n          return _context.abrupt(\"return\", name[0]);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  Firebase.firestore().collection(\"recipes\").onSnapShot(function (snapshot) {\n    return recipesArray = (_readOnlyError(\"recipesArray\"), snapshot.docs.map(function (doc) {\n      var data = doc.data();\n\n      if (data.categoryId == categoryId) {\n        return data;\n      }\n    }));\n  });\n}\nexport function getAllRecipes() {\n  var recipesArray;\n  return _regeneratorRuntime.async(function getAllRecipes$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          recipesArray = [];\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"recipes\").get().then(function (snapshot) {\n            recipesArray = snapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n          }));\n\n        case 3:\n          console.log(recipesArray);\n          return _context2.abrupt(\"return\", recipesArray);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAllPublicEvents() {\n  var recipesArray;\n  return _regeneratorRuntime.async(function getAllPublicEvents$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          recipesArray = [];\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"publicEvents\").get().then(function (snapshot) {\n            recipesArray = snapshot.docs.map(function (doc) {\n              var id = doc.id;\n              var data = doc.data();\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n          }));\n\n        case 3:\n          console.log(recipesArray);\n          return _context3.abrupt(\"return\", recipesArray);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getUserByEmail(email) {\n  var recipesArray;\n  return _regeneratorRuntime.async(function getUserByEmail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          recipesArray = [];\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"users\").where('email', '==', email).get().then(function (snapshot) {\n            recipesArray = snapshot.docs.map(function (doc) {\n              var id = doc.id;\n              var data = doc.data();\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n          }));\n\n        case 3:\n          console.log(recipesArray);\n          return _context4.abrupt(\"return\", recipesArray);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getAllEvents() {\n  var recipesArray;\n  return _regeneratorRuntime.async(function getAllEvents$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          recipesArray = [];\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"events\").get().then(function (snapshot) {\n            recipesArray = snapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n          }));\n\n        case 3:\n          console.log(recipesArray);\n          return _context5.abrupt(\"return\", recipesArray);\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getPrivateFriendEvents(friend) {\n  var friendEventsArray;\n  return _regeneratorRuntime.async(function getPrivateFriendEvents$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          friendEventsArray = [];\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.firestore().collection(\"privateEvents\").doc(friend.id).collection(\"userEvents\").get().then(function (snapshot) {\n            friendEventsArray = snapshot.docs.map(function (doc) {\n              var id = doc.id;\n              var data = doc.data();\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n          }));\n\n        case 3:\n          console.log(friendEventsArray);\n          return _context6.abrupt(\"return\", friendEventsArray);\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function addRecipe(recipe) {\n  Firebase.firestore().collection(\"recipes\").add({\n    recipeId: recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: recipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients.map(function (ingredient) {\n      return {\n        id: ingredient[0],\n        amount: ingredient[1]\n      };\n    }),\n    description: recipe.description\n  });\n}\nexport function addAllRecipes(recipes) {\n  recipes.map(function (recipe) {\n    addRecipe(recipe);\n  });\n}\nexport function addCategory(category) {\n  Firebase.firestore().collection(\"categories\").add({\n    id: category.id,\n    name: category.name,\n    photo_url: category.photo_url\n  });\n}\nexport function addCategories(categories) {\n  categories.map(function (categories) {\n    addCategory(categories);\n  });\n}\nexport function addIngredient(ingredient) {\n  Firebase.firestore().collection(\"ingredients\").add({\n    ingredientId: ingredient.ingredientId,\n    name: ingredient.name,\n    photo_url: ingredient.photo_url\n  });\n}\nexport function addIngredients(ingredients) {\n  ingredients.map(function (ingredient) {\n    addIngredient(ingredient);\n  });\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var count = 0;\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","Firebase","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryNameFirebase","firestore","collection","where","get","then","snapshot","docs","doc","console","log","getCategoryName","getRecipes","recipesArray","onSnapShot","getAllRecipes","getAllPublicEvents","getUserByEmail","email","getAllEvents","getPrivateFriendEvents","friend","friendEventsArray","addRecipe","recipe","add","recipeId","title","photosArray","time","ingredient","amount","description","addAllRecipes","addCategory","addCategories","addIngredient","addIngredients","getRecipesByIngredient","index","push","getNumberOfRecipes","count","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName"],"mappings":"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","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport Firebase from '../../firebaseConfig'\n\nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) {\n  let name;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n\nexport async function getCategoryNameFirebase(categoryId) {\n  let name=[];\n  await Firebase.firestore()\n  .collection(\"categories\")\n  .where(\"id\",\"==\",categoryId)\n  .get()\n  .then((snapshot) => {\n    name = snapshot.docs.map(doc => {\n     return doc.data().name;\n   })})\n   console.log(name[0])\n   return name[0];\n\n/*\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n\n  */\n}\n\nexport function getCategoryName(categoryId){\n  \n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  Firebase.firestore()\n    .collection(\"recipes\")\n    .onSnapShot((snapshot) => {\n      return recipesArray = snapshot.docs.map(doc => {\n        const data = doc.data();\n        if (data.categoryId == categoryId) {\n        return data\n        }\n      })})\n      /*\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n  */\n}\n\nexport async function getAllRecipes(){\n  var recipesArray = [];\n  await Firebase.firestore()\n    .collection(\"recipes\")\n    .get()\n    .then((snapshot) => {\n       recipesArray = snapshot.docs.map(doc => {\n        return doc.data();\n      })})\n  console.log(recipesArray)\n  return recipesArray;\n}\n\nexport async function getAllPublicEvents(){\n  var recipesArray = [];\n  await Firebase.firestore()\n    .collection(\"publicEvents\")\n    .get()\n    .then((snapshot) => {\n       recipesArray = snapshot.docs.map(doc => {\n        const id = doc.id;\n        const data = doc.data();\n        return {id,...data};\n      })})\n  console.log(recipesArray)\n  return recipesArray;\n}\n\nexport async function getUserByEmail(email){\n  var recipesArray = [];\n  await Firebase.firestore()\n    .collection(\"users\")\n    .where('email','==',email)\n    .get()\n    .then((snapshot) => {\n       recipesArray = snapshot.docs.map(doc => {\n        const id = doc.id;\n        const data = doc.data();\n        return {id,...data};\n      })})\n  console.log(recipesArray)\n  return recipesArray;\n}\n\nexport async function getAllEvents(){\n  var recipesArray = [];\n  await Firebase.firestore()\n    .collection(\"events\")\n    .get()\n    .then((snapshot) => {\n       recipesArray = snapshot.docs.map(doc => {\n        return doc.data();\n      })})\n  console.log(recipesArray)\n  return recipesArray;\n}\n\nexport async function getPrivateFriendEvents(friend){\n  var friendEventsArray = [];\n  await Firebase.firestore()\n    .collection(\"privateEvents\")\n    .doc(friend.id)\n    .collection(\"userEvents\")\n    .get()\n    .then((snapshot) => {\n      friendEventsArray = snapshot.docs.map(doc => {\n        const id = doc.id;\n        const data = doc.data();\n        return {id,...data};\n      })})\n  console.log(friendEventsArray)\n  return friendEventsArray;\n}\n\nexport function addRecipe(recipe){\n  Firebase.firestore()\n  .collection(\"recipes\").add({\n    recipeId:recipe.recipeId,\n    categoryId: recipe.categoryId,\n    title: recipe.title,\n    photo_url: recipe.photo_url,\n    photosArray: recipe.photosArray,\n    time: recipe.time,\n    ingredients: recipe.ingredients.map(ingredient=>{\n      return {\n        id: ingredient[0],\n        amount: ingredient[1]\n      }\n    }),\n    description: recipe.description\n  })\n}\n\nexport function addAllRecipes(recipes){\n  recipes.map(recipe=>{\n    addRecipe(recipe)\n  })\n}\n\nexport function addCategory(category){\n  Firebase.firestore()\n  .collection(\"categories\").add({\n    id: category.id,\n    name: category.name,\n    photo_url:category.photo_url\n  })\n}\n\nexport function addCategories(categories){\n  categories.map(categories=>{\n    addCategory(categories)\n  })\n}\n\nexport function addIngredient(ingredient){\n  Firebase.firestore()\n  .collection(\"ingredients\").add({\n    ingredientId: ingredient.ingredientId,\n    name: ingredient.name,\n    photo_url:ingredient.photo_url\n  })\n}\n\nexport function addIngredients(ingredients){\n  ingredients.map(ingredient=>{\n    addIngredient(ingredient)\n  })\n}\n\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\nexport function getNumberOfRecipes(categoryId) {\n  let count = 0;\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  const ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      // data.name.yoUpperCase() == nameUpper\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n"]},"metadata":{},"sourceType":"module"}