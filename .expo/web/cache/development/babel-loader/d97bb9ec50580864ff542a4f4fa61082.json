{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\Search\\\\SearchScreen.js\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getUserByEmail } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Firebase from \"../../../firebaseConfig\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport firebase from \"firebase\";\nexport default function SearchScreen(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return React.createElement(View, {\n          style: styles.searchContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          style: styles.searchIcon,\n          source: require(\"../../../assets/icons/search.png\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          style: styles.searchInput,\n          onChangeText: function onChangeText(value) {\n            return setEmail(value);\n          },\n          value: email,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }), React.createElement(AppButton, {\n          onPress: function onPress() {\n            return handleSearch();\n          },\n          title: React.createElement(Image, {\n            style: styles.searchIcon,\n            source: require(\"../../../assets/icons/close.png\"),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 58\n            }\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 26\n          }\n        });\n      }\n    });\n  }, [email]);\n\n  var handleSearch = function handleSearch() {\n    getUserByEmail(email).then(function (res) {\n      setUser(res[0]);\n    });\n  };\n\n  var sendFriendRequest = function sendFriendRequest() {\n    firebase.firestore().collection('users').doc(user.id).set({\n      friendRequests: [{\n        id: firebase.auth().currentUser.uid,\n        email: firebase.auth().currentUser.email\n      }]\n    }, {\n      merge: true\n    });\n  };\n\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, user.email), React.createElement(AppButton, {\n    onPress: function onPress() {\n      return sendFriendRequest();\n    },\n    title: \"Send Friend Request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/Search/SearchScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","styles","MenuImage","getUserByEmail","TextInput","Firebase","AppButton","firebase","SearchScreen","props","navigation","email","setEmail","user","setUser","setOptions","headerLeft","openDrawer","headerTitle","searchContainer","searchIcon","require","searchInput","value","handleSearch","headerRight","then","res","sendFriendRequest","firestore","collection","doc","id","set","friendRequests","auth","currentUser","uid","merge","onPressRecipe","item","navigate","container","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { FlatList, Text, View, Image, TouchableHighlight, Pressable } from \"react-native\";\nimport styles from \"./styles\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getUserByEmail } from \"../../data/MockDataAPI\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Firebase from \"../../../firebaseConfig\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport firebase from \"firebase\";\n\nexport default function SearchScreen(props) {\n  const { navigation } = props;\n\n  const [email, setEmail] = useState(\"\");\n  const [user, setUser] = useState([]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <MenuImage\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n      ),\n      headerTitle: () => (\n        <View style={styles.searchContainer}>\n          <Image style={styles.searchIcon} source={require(\"../../../assets/icons/search.png\")} />\n          <TextInput\n            style={styles.searchInput}\n            onChangeText={value=>setEmail(value)}\n            value={email}\n          />\n          <AppButton onPress={()=>handleSearch()} title={<Image style={styles.searchIcon} source={require(\"../../../assets/icons/close.png\")} />\n        }/>\n\n        </View>\n      ),\n      headerRight: () => <View />,\n    });\n  }, [email]);\n\n\n  const handleSearch = () => {\n    getUserByEmail(email).then((res)=>{\n      setUser(res[0])\n    })\n  };\n\n  const sendFriendRequest = () =>{\n    firebase.firestore()\n    .collection('users')\n    .doc(user.id)\n    .set(\n      { friendRequests: [{id:firebase.auth().currentUser.uid, email:firebase.auth().currentUser.email }] },\n      { merge: true }\n    )\n    \n  }\n\n  const onPressRecipe = (item) => {\n    navigation.navigate(\"Recipe\", { item });\n  };\n\n\n  return (\n    <View style={styles.container}>\n\n    <Text style={styles.title}>{user.email}</Text>\n    <AppButton onPress={()=>sendFriendRequest()} title=\"Send Friend Request\"/>\n\n  </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}