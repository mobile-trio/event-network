{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MERTCAN\\\\Desktop\\\\receipes-app\\\\recipes-app-react-native-master\\\\src\\\\screens\\\\Register\\\\Register.js\";\nimport AppButton from \"../../components/AppButton/AppButton\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\nimport { useValidation } from 'react-native-form-validator';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Firebase from \"../../../firebaseConfig\";\nimport commonFormStyles from \"../../styles/commonFormStyles\";\nexport default function Register(props) {\n  var _this = this;\n\n  var navigation = props.navigation,\n      route = props.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var successAlert = function successAlert() {\n    return Alert.alert('Registered!', 'Registered Successfully', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  var errorAlert = function errorAlert(error) {\n    return Alert.alert('Error', error, [{\n      text: 'OK',\n      onPress: function onPress() {\n        return console.log('OK Pressed');\n      }\n    }]);\n  };\n\n  var _useValidation = useValidation({\n    state: {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword\n    }\n  }),\n      validate = _useValidation.validate,\n      isFieldInError = _useValidation.isFieldInError,\n      getErrorsInField = _useValidation.getErrorsInField,\n      getErrorMessages = _useValidation.getErrorMessages;\n\n  var _onPressButton = function _onPressButton() {\n    if (validate({\n      email: {\n        email: true,\n        required: true\n      },\n      password: {\n        string: true,\n        min: 6,\n        required: true\n      },\n      confirmPassword: {\n        equalPassword: password\n      }\n    })) {\n      onRegister();\n    }\n  };\n\n  var onRegister = function onRegister() {\n    Firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n      Firebase.firestore().collection(\"users\").doc(Firebase.auth().currentUser.uid).set({\n        email: email,\n        password: password\n      }).then(function (res) {\n        setIsLoading(false);\n        console.log(result);\n        successAlert();\n        navigation.navigate(\"Login\");\n      }).catch(function (error) {\n        setIsLoading(false);\n        console.log(error);\n        errorAlert(error.toString());\n      });\n      console.log(result);\n    }).catch(function (error) {\n      setIsLoading(false);\n      console.log(error);\n      errorAlert(error.toString());\n    });\n  };\n\n  return React.createElement(View, {\n    style: commonFormStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(LoadingIndicator, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'position' : null,\n    keyboardVerticalOffset: Platform.OS === 'ios' ? 50 : 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: commonFormStyles.formBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: commonFormStyles.formItems,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), isFieldInError('email') && getErrorsInField('email').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: commonFormStyles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: commonFormStyles.formItems,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), isFieldInError('password') && getErrorsInField('password').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: commonFormStyles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(TextInput, {\n    style: commonFormStyles.formItems,\n    placeholder: \"confirmPassword\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(confirmPassword) {\n      return setConfirmPassword(confirmPassword);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), isFieldInError('confirmPassword') && getErrorsInField('confirmPassword').map(function (errorMessage) {\n    return React.createElement(Text, {\n      key: errorMessage,\n      style: commonFormStyles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, errorMessage);\n  }), React.createElement(AppButton, {\n    style: commonFormStyles.button,\n    onPress: function onPress() {\n      return _onPressButton();\n    },\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/MERTCAN/Desktop/receipes-app/recipes-app-react-native-master/src/screens/Register/Register.js"],"names":["AppButton","LoadingIndicator","useValidation","React","useState","Firebase","commonFormStyles","Register","props","navigation","route","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","successAlert","Alert","alert","text","onPress","console","log","errorAlert","error","state","validate","isFieldInError","getErrorsInField","getErrorMessages","_onPressButton","required","string","min","equalPassword","onRegister","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","res","navigate","catch","toString","container","flex","Platform","OS","formBox","formItems","map","errorMessage","errorText","button"],"mappings":";;AAAA,OAAOA,SAAP;AACA,OAAOC,gBAAP;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;;;;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,gBAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,MAE9BC,UAF8B,GAERD,KAFQ,CAE9BC,UAF8B;AAAA,MAElBC,KAFkB,GAERF,KAFQ,CAElBE,KAFkB;;AAAA,kBAGZN,QAAQ,CAAC,EAAD,CAHI;AAAA;AAAA,MAG/BO,KAH+B;AAAA,MAGxBC,QAHwB;;AAAA,mBAINR,QAAQ,CAAC,EAAD,CAJF;AAAA;AAAA,MAI/BS,QAJ+B;AAAA,MAIrBC,WAJqB;;AAAA,mBAKQV,QAAQ,CAAC,EAAD,CALhB;AAAA;AAAA,MAK/BW,eAL+B;AAAA,MAKdC,kBALc;;AAAA,mBAOJZ,QAAQ,CAAC,KAAD,CAPJ;AAAA;AAAA,MAO/Ba,SAP+B;AAAA,MAOpBC,YAPoB;;AAUtC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WACrBC,KAAK,CAACC,KAAN,CAAY,aAAZ,EAA2B,yBAA3B,EAAsD,CACpD;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KADoD,CAAtD,CADqB;AAAA,GAArB;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA,WACnBP,KAAK,CAACC,KAAN,CAAY,OAAZ,EAAqBM,KAArB,EAA4B,CAC1B;AAAEL,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KAD0B,CAA5B,CADmB;AAAA,GAAnB;;AAdsC,uBAqBtCvB,aAAa,CAAC;AACZ0B,IAAAA,KAAK,EAAE;AAAEjB,MAAAA,KAAK,EAALA,KAAF;AAAQE,MAAAA,QAAQ,EAARA,QAAR;AAAiBE,MAAAA,eAAe,EAAfA;AAAjB;AADK,GAAD,CArByB;AAAA,MAoB9Bc,QApB8B,kBAoB9BA,QApB8B;AAAA,MAoBpBC,cApBoB,kBAoBpBA,cApBoB;AAAA,MAoBJC,gBApBI,kBAoBJA,gBApBI;AAAA,MAoBcC,gBApBd,kBAoBcA,gBApBd;;AAyBtC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAGJ,QAAQ,CAAC;AACVlB,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE,IAAT;AAAeuB,QAAAA,QAAQ,EAAE;AAAzB,OADG;AAEVrB,MAAAA,QAAQ,EAAE;AAAEsB,QAAAA,MAAM,EAAE,IAAV;AAAeC,QAAAA,GAAG,EAAC,CAAnB;AAAuBF,QAAAA,QAAQ,EAAE;AAAjC,OAFA;AAGVnB,MAAAA,eAAe,EAAE;AAAEsB,QAAAA,aAAa,EAAExB;AAAjB;AAHP,KAAD,CAAX,EAIG;AACDyB,MAAAA,UAAU;AACX;AACF,GARD;;AAUA,MAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBjC,IAAAA,QAAQ,CAACkC,IAAT,GAAgBC,8BAAhB,CAA+C7B,KAA/C,EAAqDE,QAArD,EACC4B,IADD,CACM,UAACC,MAAD,EAAU;AACdrC,MAAAA,QAAQ,CAACsC,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACGC,GADH,CACOxC,QAAQ,CAACkC,IAAT,GAAgBO,WAAhB,CAA4BC,GADnC,EAEGC,GAFH,CAEO;AACHrC,QAAAA,KAAK,EAALA,KADG;AAEHE,QAAAA,QAAQ,EAARA;AAFG,OAFP,EAKK4B,IALL,CAKU,UAAAQ,GAAG,EAAE;AACX/B,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACAvB,QAAAA,YAAY;AACZV,QAAAA,UAAU,CAACyC,QAAX,CAAoB,OAApB;AACD,OAVH,EAUKC,KAVL,CAUW,UAACxB,KAAD,EAAS;AAChBT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAD,QAAAA,UAAU,CAACC,KAAK,CAACyB,QAAN,EAAD,CAAV;AACD,OAdH;AAeA5B,MAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACD,KAlBD,EAmBCS,KAnBD,CAmBO,UAACxB,KAAD,EAAS;AACdT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAD,MAAAA,UAAU,CAACC,KAAK,CAACyB,QAAN,EAAD,CAAV;AACD,KAvBD;AAwBD,GAzBD;;AA2BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,gBAAgB,CAAC+C,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEpC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,oBAAD;AACO,IAAA,KAAK,EAAE;AAACqC,MAAAA,IAAI,EAAC;AAAN,KADd;AAEO,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,UAAxB,GAAqC,IAFtD;AAGO,IAAA,sBAAsB,EAAED,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,gBAAgB,CAACmD,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEnD,gBAAgB,CAACoD,SAD1B;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,YAAY,EAAE,sBAAA/C,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGmB,cAAc,CAAC,OAAD,CAAd,IACCC,gBAAgB,CAAC,OAAD,CAAhB,CAA0B4B,GAA1B,CAA8B,UAAAC,YAAY;AAAA,WACxC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,YAAX;AAAyB,MAAA,KAAK,EAAEtD,gBAAgB,CAACuD,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DD,YAA7D,CADwC;AAAA,GAA1C,CAPJ,EAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEtD,gBAAgB,CAACoD,SAD1B;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,YAAY,EAAE,sBAAA7C,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBGiB,cAAc,CAAC,UAAD,CAAd,IACCC,gBAAgB,CAAC,UAAD,CAAhB,CAA6B4B,GAA7B,CAAiC,UAAAC,YAAY;AAAA,WAC3C,oBAAC,IAAD;AAAO,MAAA,GAAG,EAAEA,YAAZ;AAA0B,MAAA,KAAK,EAAEtD,gBAAgB,CAACuD,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DD,YAA9D,CAD2C;AAAA,GAA7C,CAjBJ,EAoBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEtD,gBAAgB,CAACoD,SAD1B;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,YAAY,EAAE,sBAAA3C,eAAe;AAAA,aAAIC,kBAAkB,CAACD,eAAD,CAAtB;AAAA,KAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EA0BGe,cAAc,CAAC,iBAAD,CAAd,IACCC,gBAAgB,CAAC,iBAAD,CAAhB,CAAoC4B,GAApC,CAAwC,UAAAC,YAAY;AAAA,WAClD,oBAAC,IAAD;AAAO,MAAA,GAAG,EAAEA,YAAZ;AAA0B,MAAA,KAAK,EAAEtD,gBAAgB,CAACuD,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DD,YAA9D,CADkD;AAAA,GAApD,CA3BJ,EA8BE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEtD,gBAAgB,CAACwD,MAD1B;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM7B,cAAc,EAApB;AAAA,KAFX;AAGE,IAAA,KAAK,EAAC,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CADF,CAJF,CAFF,CADF;AAgDD","sourcesContent":["import AppButton from '../../components/AppButton/AppButton';\r\nimport LoadingIndicator from '../../components/LoadingIndicator/LoadingIndicator';\r\nimport { useValidation } from 'react-native-form-validator';\r\nimport React, {useState } from 'react'\r\nimport { View, Button, TextInput, Text,  KeyboardAvoidingView, ScrollView, Alert } from 'react-native'\r\nimport Firebase from '../../../firebaseConfig';\r\nimport commonFormStyles from '../../styles/commonFormStyles';\r\n\r\nexport default function Register(props) {\r\n\r\n  const { navigation, route } = props;\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  \r\n  const successAlert = () =>\r\n  Alert.alert('Registered!', 'Registered Successfully', [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n  const errorAlert = (error) =>\r\n  Alert.alert('Error', error, [\r\n    { text: 'OK', onPress: () => console.log('OK Pressed') },\r\n  ]);\r\n\r\n\r\n  const { validate, isFieldInError, getErrorsInField, getErrorMessages } =\r\n  useValidation({\r\n    state: { email,password,confirmPassword },\r\n  });\r\n\r\n  const _onPressButton = () => {\r\n    if(validate({\r\n      email: { email: true, required: true },\r\n      password: { string: true,min:6,  required: true },\r\n      confirmPassword: { equalPassword: password },\r\n    })){\r\n      onRegister()\r\n    }\r\n  };\r\n\r\n  const onRegister = () => {\r\n    Firebase.auth().createUserWithEmailAndPassword(email,password)\r\n    .then((result)=>{\r\n      Firebase.firestore().collection(\"users\")\r\n        .doc(Firebase.auth().currentUser.uid)\r\n        .set({\r\n          email,\r\n          password\r\n        }).then(res=>{\r\n          setIsLoading(false)\r\n          console.log(result)\r\n          successAlert()\r\n          navigation.navigate(\"Login\");\r\n        }).catch((error)=>{\r\n          setIsLoading(false)\r\n          console.log(error)\r\n          errorAlert(error.toString())\r\n        })\r\n      console.log(result)\r\n    })\r\n    .catch((error)=>{\r\n      setIsLoading(false)\r\n      console.log(error)\r\n      errorAlert(error.toString())\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={commonFormStyles.container}>\r\n      <LoadingIndicator isLoading={isLoading}/>\r\n      <KeyboardAvoidingView\r\n             style={{flex:1}}\r\n             behavior={Platform.OS === 'ios' ? 'position' : null}\r\n             keyboardVerticalOffset={Platform.OS === 'ios' ? 50 : 70}>\r\n        <ScrollView>\r\n          <View style={commonFormStyles.formBox}>\r\n            <TextInput\r\n              style={commonFormStyles.formItems}\r\n              placeholder=\"email\"\r\n              onChangeText={email => setEmail(email)}\r\n            />\r\n            {isFieldInError('email') &&\r\n              getErrorsInField('email').map(errorMessage => (\r\n                <Text key={errorMessage} style={commonFormStyles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={commonFormStyles.formItems}\r\n              placeholder=\"password\"\r\n              secureTextEntry={true}\r\n              onChangeText={password => setPassword(password)}\r\n            />\r\n            {isFieldInError('password') &&\r\n              getErrorsInField('password').map(errorMessage => (\r\n                <Text  key={errorMessage} style={commonFormStyles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <TextInput\r\n              style={commonFormStyles.formItems}\r\n              placeholder=\"confirmPassword\"\r\n              secureTextEntry={true}\r\n              onChangeText={confirmPassword => setConfirmPassword(confirmPassword)}\r\n            />\r\n            {isFieldInError('confirmPassword') &&\r\n              getErrorsInField('confirmPassword').map(errorMessage => (\r\n                <Text  key={errorMessage} style={commonFormStyles.errorText}>{errorMessage}</Text>\r\n              ))}\r\n            <AppButton\r\n              style={commonFormStyles.button}\r\n              onPress={() => _onPressButton()}\r\n              title=\"Register\" />\r\n          </View>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}